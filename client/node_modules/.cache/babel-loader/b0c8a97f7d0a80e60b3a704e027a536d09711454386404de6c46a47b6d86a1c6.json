{"ast":null,"code":"var _jsxFileName = \"/Users/utkarshbhardwaj/Desktop/book-library/client/src/components/Pages/ExploreBooks.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport styles from \"./ExploreBooks.module.css\";\nimport GenreForm from \"../UI/GenreForm\";\nimport AddBookCard from \"../UI/AddBookCard\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExploreBooks = () => {\n  _s();\n  const [books, setBooks] = useState([]);\n  const [placeholder, setPlaceholder] = useState(\"\");\n  const [selectedGenre, setSelectedGenre] = useState(\"Fantasy\");\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    setLoading(true);\n    axios.get(`http://localhost:8080/${selectedGenre}`).then(response => {\n      const {\n        books,\n        placeholder,\n        selectedGenre\n      } = response.data;\n      console.log(\"ye le  bhai:   \", response.data);\n      setBooks(books);\n      setPlaceholder(placeholder);\n      setSelectedGenre(selectedGenre);\n    }).catch(error => console.error(\"Error fetching data: \", error)).finally(setLoading(false));\n  }, [selectedGenre]);\n  const handleGenreSelect = genre => {\n    setSelectedGenre(genre);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.exploreBooksSection,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: styles.heading,\n      children: \"Explore Books\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GenreForm, {\n      onGenreSelect: handleGenreSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.bookContainer,\n      children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this) : books && books.length > 0 ? books.map(book => /*#__PURE__*/_jsxDEV(AddBookCard, {\n        coverId: book.cover_id,\n        title: book.title,\n        authorName: book.author_name,\n        ratingsAverage: book.ratings_average,\n        publishDate: book.publish_date\n      }, book.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No books found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(ExploreBooks, \"PU6LTWDSmItwO0EMOlTU46/i6V4=\");\n_c = ExploreBooks;\nexport default ExploreBooks;\nvar _c;\n$RefreshReg$(_c, \"ExploreBooks\");","map":{"version":3,"names":["React","useState","useEffect","styles","GenreForm","AddBookCard","axios","jsxDEV","_jsxDEV","ExploreBooks","_s","books","setBooks","placeholder","setPlaceholder","selectedGenre","setSelectedGenre","loading","setLoading","get","then","response","data","console","log","catch","error","finally","handleGenreSelect","genre","className","exploreBooksSection","children","heading","fileName","_jsxFileName","lineNumber","columnNumber","onGenreSelect","bookContainer","length","map","book","coverId","cover_id","title","authorName","author_name","ratingsAverage","ratings_average","publishDate","publish_date","key","_c","$RefreshReg$"],"sources":["/Users/utkarshbhardwaj/Desktop/book-library/client/src/components/Pages/ExploreBooks.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styles from \"./ExploreBooks.module.css\";\nimport GenreForm from \"../UI/GenreForm\";\nimport AddBookCard from \"../UI/AddBookCard\";\nimport axios from \"axios\";\n\nconst ExploreBooks = () => {\n  const [books, setBooks] = useState([]);\n  const [placeholder, setPlaceholder] = useState(\"\");\n  const [selectedGenre, setSelectedGenre] = useState(\"Fantasy\");\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    axios\n      .get(`http://localhost:8080/${selectedGenre}`)\n      .then((response) => {\n        const { books, placeholder, selectedGenre } = response.data;\n        console.log(\"ye le  bhai:   \", response.data);\n        setBooks(books);\n        setPlaceholder(placeholder);\n        setSelectedGenre(selectedGenre);\n      })\n      .catch((error) => console.error(\"Error fetching data: \", error))\n      .finally(setLoading(false));\n  }, [selectedGenre]);\n\n  const handleGenreSelect = (genre) => {\n    setSelectedGenre(genre);\n  };\n\n  return (\n    <div className={styles.exploreBooksSection}>\n      <h1 className={styles.heading}>Explore Books</h1>\n      <GenreForm onGenreSelect={handleGenreSelect} />\n      <div className={styles.bookContainer}>\n        {loading ? (\n          <p>Loading...</p>\n        ) : books && books.length > 0 ? (\n          books.map((book) => (\n            <AddBookCard\n              key={book.key}\n              coverId={book.cover_id}\n              title={book.title}\n              authorName={book.author_name}\n              ratingsAverage={book.ratings_average}\n              publishDate={book.publish_date}\n            />\n          ))\n        ) : (\n          <p>No books found.</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ExploreBooks;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}